let h={};const g=e=>{if(!e||!e.query&&!e.mergeQuery)return"";const t=e.query??e.mergeQuery,m=e.mergeQuery!==void 0,f=r=>r===!0?"1":r===!1?"0":r.toString(),l=new URLSearchParams(m&&typeof window<"u"?window.location.search:"");for(const r in t){if(t[r]===void 0||t[r]===null){l.delete(r);continue}if(Array.isArray(t[r]))l.has(`${r}[]`)&&l.delete(`${r}[]`),t[r].forEach(d=>{l.append(`${r}[]`,d.toString())});else if(typeof t[r]=="object"){l.forEach((d,Q)=>{Q.startsWith(`${r}[`)&&l.delete(Q)});for(const d in t[r])typeof t[r][d]>"u"||["string","number","boolean"].includes(typeof t[r][d])&&l.set(`${r}[${d}]`,f(t[r][d]))}else l.set(r,f(t[r]))}const y=l.toString();return y.length>0?`?${y}`:""},$=e=>{const t={...e??{}};for(const m in h)t[m]===void 0&&h[m]!==void 0&&(t[m]=h[m]);return t},o=e=>({url:o.url(e),method:"get"});o.definition={methods:["get","head"],url:"/login"};o.url=e=>o.definition.url+g(e);o.get=e=>({url:o.url(e),method:"get"});o.head=e=>({url:o.url(e),method:"head"});const a=e=>({action:o.url(e),method:"get"});a.get=e=>({action:o.url(e),method:"get"});a.head=e=>({action:o.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});o.form=a;const i=e=>({url:i.url(e),method:"post"});i.definition={methods:["post"],url:"/logout"};i.url=e=>i.definition.url+g(e);i.post=e=>({url:i.url(e),method:"post"});const q=e=>({action:i.url(e),method:"post"});q.post=e=>({action:i.url(e),method:"post"});i.form=q;const u=e=>({url:u.url(e),method:"get"});u.definition={methods:["get","head"],url:"/register"};u.url=e=>u.definition.url+g(e);u.get=e=>({url:u.url(e),method:"get"});u.head=e=>({url:u.url(e),method:"head"});const s=e=>({action:u.url(e),method:"get"});s.get=e=>({action:u.url(e),method:"get"});s.head=e=>({action:u.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});u.form=s;const n=e=>({url:n.url(e),method:"get"});n.definition={methods:["get","head"],url:"/"};n.url=e=>n.definition.url+g(e);n.get=e=>({url:n.url(e),method:"get"});n.head=e=>({url:n.url(e),method:"head"});const c=e=>({action:n.url(e),method:"get"});c.get=e=>({action:n.url(e),method:"get"});c.head=e=>({action:n.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});n.form=c;export{$ as a,n as h,i as l,g as q,u as r};
